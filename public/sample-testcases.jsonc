[
  {
    "id": "TC_001",
    "name": "Login with valid credentials",
    "description": "Verify that a user can successfully log in using valid credentials and is redirected to the dashboard",
    "steps": [
      "Navigate to the login page",
      "Enter valid username in the username field",
      "Enter valid password in the password field",
      "Click the Login button"
    ],
    "expectedResult": "User should be successfully logged in and redirected to the dashboard with a welcome message",
    "priority": "High",
    "status": "Not Run",
    "automationStatus": "Automated",
    "applicableVersions": ["v1.0", "v1.1", "v2.0"],
    "requirementIds": ["REQ-001", "REQ-002"],
    "tags": ["Authentication", "Login", "Smoke Test"],
    "category": "Authentication",
    "preconditions": "User account must exist in the system with valid credentials",
    "testData": "Valid username: testuser@example.com, Valid password: TestPass123!",
    "assignee": "QA Team",
    "estimatedDuration": 2,
    "automationPath": "tests/authentication/test_valid_login.py",
    "lastExecuted": null,
    "executedBy": ""
  },
  {
    "id": "TC_002",
    "name": "Login with invalid credentials",
    "description": "Verify that appropriate error message is displayed when user attempts to login with invalid credentials",
    "steps": [
      "Navigate to the login page",
      "Enter invalid username in the username field",
      "Enter invalid password in the password field",
      "Click the Login button",
      "Verify error message is displayed"
    ],
    "expectedResult": "Error message should be displayed: 'Invalid username or password. Please try again.'",
    "priority": "Medium",
    "status": "Not Run",
    "automationStatus": "Automated",
    "applicableVersions": ["v1.0", "v1.1", "v2.0"],
    "requirementIds": ["REQ-001"],
    "tags": ["Authentication", "Login", "Negative Testing", "Security"],
    "category": "Authentication",
    "preconditions": "Login page must be accessible",
    "testData": "Invalid username: invalid@test.com, Invalid password: wrongpass",
    "assignee": "Security Team",
    "estimatedDuration": 1,
    "automationPath": "tests/authentication/test_invalid_login.py",
    "lastExecuted": null,
    "executedBy": ""
  },
  {
    "id": "TC_003",
    "name": "Password reset functionality",
    "description": "Verify that users can successfully reset their password using the 'Forgot Password' feature",
    "steps": [
      "Navigate to the login page",
      "Click 'Forgot Password' link",
      "Enter registered email address",
      "Click 'Send Reset Link' button",
      "Check email for reset link",
      "Click the reset link in email",
      "Enter new password",
      "Confirm new password",
      "Click 'Reset Password' button"
    ],
    "expectedResult": "Password should be successfully reset and user should receive confirmation message",
    "priority": "High",
    "status": "Not Run",
    "automationStatus": "Manual",
    "applicableVersions": ["v1.1", "v2.0"],
    "requirementIds": ["REQ-001", "REQ-003"],
    "tags": ["Authentication", "Password Reset", "Email Integration"],
    "category": "Authentication",
    "preconditions": "User must have a registered account with valid email address",
    "testData": "Email: testuser@example.com, New password: NewPass456!",
    "assignee": "QA Team",
    "estimatedDuration": 5,
    "automationPath": "",
    "lastExecuted": null,
    "executedBy": ""
  },
  {
    "id": "TC_004",
    "name": "User profile update",
    "description": "Verify that authenticated users can successfully update their profile information",
    "steps": [
      "Log in with valid credentials",
      "Navigate to Profile Settings page",
      "Update first name field",
      "Update last name field",
      "Update phone number field",
      "Click 'Save Changes' button",
      "Verify success message is displayed",
      "Verify updated information is persisted"
    ],
    "expectedResult": "Profile information should be successfully updated and changes should be reflected immediately",
    "priority": "Medium",
    "status": "Not Run",
    "automationStatus": "Automated",
    "applicableVersions": ["v2.0"],
    "requirementIds": ["REQ-004"],
    "tags": ["User Management", "Profile", "Data Update"],
    "category": "User Management",
    "preconditions": "User must be logged in and have access to profile settings",
    "testData": "First Name: John, Last Name: Smith, Phone: +1-555-0123",
    "assignee": "Development Team",
    "estimatedDuration": 3,
    "automationPath": "tests/user_management/test_profile_update.py",
    "lastExecuted": null,
    "executedBy": ""
  },
  {
    "id": "TC_005",
    "name": "Add product to shopping cart",
    "description": "Verify that users can successfully add products to their shopping cart and cart total is calculated correctly",
    "steps": [
      "Navigate to the product catalog page",
      "Select a product from the list",
      "Click 'View Details' to open product page",
      "Select desired quantity",
      "Choose product options (color, size) if applicable",
      "Click 'Add to Cart' button",
      "Verify cart counter is updated",
      "Navigate to cart page",
      "Verify product details and quantity are correct",
      "Verify cart total is calculated correctly"
    ],
    "expectedResult": "Product should be added to cart with correct details, quantity, and total price calculation",
    "priority": "High",
    "status": "Not Run",
    "automationStatus": "Manual",
    "applicableVersions": ["v2.0"],
    "requirementIds": ["REQ-005", "REQ-006"],
    "tags": ["E-commerce", "Shopping Cart", "Product Management"],
    "category": "E-commerce",
    "preconditions": "Products must be available in catalog and user must have access to shopping features",
    "testData": "Product: Laptop Model ABC, Quantity: 2, Price: $999.99",
    "assignee": "E-commerce Team",
    "estimatedDuration": 4,
    "automationPath": "",
    "lastExecuted": null,
    "executedBy": ""
  },
  {
    "id": "TC_006",
    "name": "Checkout process with valid payment",
    "description": "Verify complete checkout process with valid payment information results in successful order placement",
    "steps": [
      "Add products to shopping cart",
      "Navigate to cart page",
      "Click 'Proceed to Checkout' button",
      "Enter or verify shipping address",
      "Select shipping method",
      "Enter valid payment information",
      "Review order summary",
      "Click 'Place Order' button",
      "Verify order confirmation page",
      "Verify order confirmation email is sent"
    ],
    "expectedResult": "Order should be successfully placed, confirmation displayed, and confirmation email sent",
    "priority": "Critical",
    "status": "Not Run",
    "automationStatus": "Automated",
    "applicableVersions": ["v2.0"],
    "requirementIds": ["REQ-007", "REQ-008"],
    "tags": ["E-commerce", "Checkout", "Payment", "Critical Path"],
    "category": "E-commerce",
    "preconditions": "User must have items in cart and valid payment method available",
    "testData": "Credit Card: 4111-1111-1111-1111, CVV: 123, Expiry: 12/25",
    "assignee": "E-commerce Team",
    "estimatedDuration": 6,
    "automationPath": "tests/ecommerce/test_checkout_valid_payment.py",
    "lastExecuted": null,
    "executedBy": ""
  }
]